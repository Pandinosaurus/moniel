REGISTER_OP("ZeroOut")
    .Attr("T: {float, int32}")
    .Input("to_zero: T")
    .Output("zeroed: T");

ZeroOut(T: [float, int32]) {
    toZero:T -> zeroed:T
}



–––––––

meh:FutureTeller{
    image <- MNIST.random
    hint <- Gauss{
        shape <- Nx10
        mean <- 0
        variance <- 0
    }
}

meh.prediction -> ReLU -> Dropout -> ReLU

FutureTeller{
    image[28x28] -> Reshape(shape=786) -> reshapedImage
    hint[10]

    (reshapedImage && hint) -> input[796]
        -> ResNet(length=100) ->
    (reconstructedImage[28x28] && prediction[10])
}

-------

-> Image -1x28x28-> Reshape(shape=1x786) -1x786-> image
-> Hint -1x10-> Gauss(mean=0, variance=2) -1x10-> blindHint

<- ReconstructedImage <-1x28x28- reconstrucedImage
<- Prediction <-1x10- prediction

image && blindHint
    -1x796->
ResidualNetwork(l=100)
    -1x796->
reconstructedImage && prediction









resnet: RN

// ResNet block is just a ResNetBlock repeated N times
ResNet{
    Input -> Repeater(block=ResNetBlock, count=<100;500;1000>) -> Output
}

ResNet{
    block: RNB(<2x2,3x3>, 4)
    Input -> Repeater(b=block, c=<100,500,1000>) -> Output
}

// ResNetBlock implements a basic unit of residual learning
ResNetBlock{
    Block{
        Input ->
            Convolution(kS=3x3, strideSize=2x2) ->
            BatchNormalization(alpha=0.3) ->
            RectifiedLinearUnit ->
            Convolution(kS=3x3, strideSize=2x2) ->
            BatchNormalization(alpha=0.3) ->
        Output
    }
    
    a:b:Block(kS=2x2)
    
    In -> [Identity, a, b] -> Summation -> Out
}


resnet: RN

// ResNet block is just a chain of ResNetBlocks of length N
ResNet{
    In -> Chain(b=RNB, n=100) -> Out
}

// ResNetBlock implements a basic unit of residual learning
ResNetBlock{
    Block{ In -> Conv(kS=3x3, sS=2x2) -> BN -> ReLU -> Conv -> BN -> Out }
    a: Block
    In -> [Id, a] -> Sum -> Out
}




// ako vyjadriť hyper parametre?

Layer(parameter){
    In -> Meh(parameter) -> Out
}

a:Layer(param = <3, 4, 5>)

a:Layer(p = <2x2, 3x3>)

// ako definovať horizontálne opakovanie bloku? chain
// ako definovať vertikálne opakovanie bloku? stack
// siamese?