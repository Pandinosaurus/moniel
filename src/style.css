body{
    display: flex;
    margin: 0;
    height: 100vh;
    width: 100vw;
    background-color: #565656;
    /* background-color: black; */
    color: orange;
    font-size: 16px;
    flex-wrap: nowrap;
    justify-content: flex-start;
    flex-direction: column;
    align-content: stretch;
    flex-wrap: wrap;
    font: 300 16px 'Helvetica Neue', Helvetica;
}
#container{
    position: absolute;
    display: flex;
    flex-direction: row;
    bottom: 0;
    top: 0;
    left: 0;
    right: 0;
}
.panel{
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 40%;
    transition: border-width,border-color ease-out 0.55s;
    display: flex;
    flex-direction: column;
    border: 1.5px solid #4e4e4e;
    margin: 10px;
    border-radius: 10px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    background-color: #2f3129;
    /*max-height: 600px;*/
    box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.75);
}

.header {
    border-bottom: 1px solid #4e4e4e;
    color: orange;
    font-family: sans-serif;
    display: flex;
    padding: 0.3em 0.6em;
    -webkit-user-select: none;
    background-color: #272822;
    border-radius: inherit;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.ace_editor{
    flex: 1 1 20em;
}

.error_widget {
    border: none;
    padding: 0.5em 1.5em;
    margin: 0.3em;
    white-space: pre-wrap;
    font-family: "Helvetica Neue";
    text-rendering: optimizeLegibility;
    background-color: hsla(0,60%,47%,1);
    box-shadow: inset 0px 0px 10px rgba(0, 0, 0, 0.53);
    border-radius: 5px;
    text-shadow: 0px 0px 7px rgb(0, 0, 0);
}

.error_widget_arrow.ace_error {
    border-color: #a42929;
}

.error_widget.ace_warning {
    background-color: #c5b21b;
}

.error_widget_arrow.ace_warning {
    border-color: #aa9917;
}

.marker_error{
    border-bottom: 1px dashed red;
    position: absolute;
    border-radius: 0;
    z-index: 2;
}

.ace_marker-layer .ace_active-line {
    position: absolute;
    z-index: 1;
}

.highlight{
    position: absolute;
    z-index: 2;
    background-color: white;
    opacity: 0.3;
}

svg#visualization{
    flex: 1;
}

g.node rect{
    rx: 20;
    ry: 20;
    stroke: white;
    stroke-width: 2px;
}

g.node:hover rect, g.node:hover polygon{
    stroke: white !important;
    stroke-width: 2px !important;
    opacity: 1 !important;
    stroke-dasharray: initial !important;
    cursor: pointer;
}

/* Unknown */
g.node.undefined > rect {
    fill: #afafaf !important;
    stroke: white;
    stroke-width: 3px;
    stroke-dasharray: 5,5;
    opacity: 0.2;
}
g.node.undefined > .label {
    fill: yellow;
}

/* Ambiguous */
g.node.ambiguous > polygon {
    fill: #afafaf !important;
    stroke: white;
    stroke-width: 3px;
    stroke-dasharray: 5,5;
    opacity: 0.2;
}
g.node.ambiguous > .label {
    fill: yellow;
}

g.node.Network > rect{
    fill: rgba(255,255,255,0.3);
    stroke: #fff;
    stroke-width: 2px;
    opacity: 0.5;
    rx: 5;
    ry: 5;
}

g > text{
    text-shadow: 0px 0px 3px rgba(0,0,0,0.4);
    cursor: pointer;
    user-select: none;
    -webkit-user-select: none;
    font-weight: normal;
    fill: white;
}

.edgePath path {
    /*
    stroke-dasharray: 10,3;
    animation: dash 13s linear reverse infinite;
    */
}

@keyframes dash {
    0% {
        stroke-dashoffset: 0;
    }
    100% {
        stroke-dashoffset: 130;
    }
}

.edgePath path {
    stroke: #fff;
    fill: #fff;
    stroke-width: 1.5px;
}

g.node.Scope rect, .clusters rect {
    fill: rgba(255,255,255,0.3);
    stroke: #fff;
    stroke-width: 2px;
    opacity: 0.5;
    rx: 20;
    ry: 20;
}

g.node.Scope text, .cluster .label text{
    fill: white;
    opacity: 0.5;
    font-weight: normal;
    font-size: small;
}