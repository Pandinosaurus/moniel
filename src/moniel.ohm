Moniel{
    Graph
        = (NodeDefinition | Chain)*

    Chain
        = NonemptyListOf<(Block), edge>

    Block
        = List | Node | path

    List
        = "[" ListOf<ListItem, ","> "]"
    ListItem
        = Node | path

    Node
        = (identifier ":")? (LiteralNode | InlineMetaNode)
    LiteralNode
        = nodeType BlockParameters
    InlineMetaNode
        = MetaNode

    NodeDefinition
        = "+" nodeType BlockParameters MetaNode?
    BlockParameters
        = ("(" Parameters ")")?
    MetaNode
        = ("{" Graph "}")


    Parameters
        = ListOf<Parameter, ",">
    Parameter (parameter)
        =  parameterName "=" Value
    Value
        = parameterName | nodeType | float | Shape | integer

    nodeType
        =  &upper (alnum | "_")+
    identifier
        =  &lower (alnum | "_")+
    path (path)
        = nonemptyListOf<identifier, "/">
    parameterName
        = letter+
    integer
        = digit+
    float
        = digit* "." digit+
    Shape
        = ListOf<integer, "x">
    edge (->)
        = "->"
    space
        += comment
    comment
        = "//" (~"\n" any)* "\n"?   -- singleLine
        | "/*" (~"*/" any)* "*/"    -- multiLine
}